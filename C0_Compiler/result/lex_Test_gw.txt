28	CONSTYP	const	row:1	colmn:0
25	INTYP	int	row:1	colmn:1
2	IDEN	cst1	row:1	colmn:2
5	ASSIGN	=	row:1	colmn:3
1	INT	1	row:1	colmn:4
8	COMMA	,	row:1	colmn:5
2	IDEN	cst2	row:1	colmn:6
5	ASSIGN	=	row:1	colmn:7
1	INT	2	row:1	colmn:8
8	COMMA	,	row:1	colmn:9
2	IDEN	cst3	row:1	colmn:10
5	ASSIGN	=	row:1	colmn:11
1	INT	3	row:1	colmn:12
9	SEMI	;	row:1	colmn:13
28	CONSTYP	const	row:2	colmn:0
26	CHARTYP	char	row:2	colmn:1
2	IDEN	csta	row:2	colmn:2
5	ASSIGN	=	row:2	colmn:3
3	CHR	'a'	row:2	colmn:4
8	COMMA	,	row:2	colmn:5
2	IDEN	cstb	row:2	colmn:6
5	ASSIGN	=	row:2	colmn:7
3	CHR	'b'	row:2	colmn:8
8	COMMA	,	row:2	colmn:9
2	IDEN	cstc	row:2	colmn:10
5	ASSIGN	=	row:2	colmn:11
3	CHR	'c'	row:2	colmn:12
9	SEMI	;	row:2	colmn:13
25	INTYP	int	row:3	colmn:0
2	IDEN	g_a	row:3	colmn:1
8	COMMA	,	row:3	colmn:2
2	IDEN	g_b	row:3	colmn:3
8	COMMA	,	row:3	colmn:4
2	IDEN	g_arr	row:3	colmn:5
13	LBRAK	[	row:3	colmn:6
1	INT	2048	row:3	colmn:7
14	RBRAK	]	row:3	colmn:8
9	SEMI	;	row:3	colmn:9
26	CHARTYP	char	row:4	colmn:0
2	IDEN	g_stra	row:4	colmn:1
13	LBRAK	[	row:4	colmn:2
1	INT	1024	row:4	colmn:3
14	RBRAK	]	row:4	colmn:4
8	COMMA	,	row:4	colmn:5
2	IDEN	g_strb	row:4	colmn:6
13	LBRAK	[	row:4	colmn:7
1	INT	2048	row:4	colmn:8
14	RBRAK	]	row:4	colmn:9
9	SEMI	;	row:4	colmn:10
27	NOTYP	void	row:7	colmn:0
2	IDEN	const_define	row:7	colmn:1
11	LPAR	(	row:7	colmn:2
12	RPAR	)	row:7	colmn:3
6	LCURB	{	row:7	colmn:4
28	CONSTYP	const	row:8	colmn:0
25	INTYP	int	row:8	colmn:1
2	IDEN	a	row:8	colmn:2
5	ASSIGN	=	row:8	colmn:3
1	INT	1	row:8	colmn:4
9	SEMI	;	row:8	colmn:5
28	CONSTYP	const	row:9	colmn:0
25	INTYP	int	row:9	colmn:1
2	IDEN	b	row:9	colmn:2
5	ASSIGN	=	row:9	colmn:3
1	INT	0	row:9	colmn:4
8	COMMA	,	row:9	colmn:5
2	IDEN	c	row:9	colmn:6
5	ASSIGN	=	row:9	colmn:7
16	MINUS	-	row:9	colmn:8
1	INT	1	row:9	colmn:9
9	SEMI	;	row:9	colmn:10
28	CONSTYP	const	row:10	colmn:0
26	CHARTYP	char	row:10	colmn:1
2	IDEN	cst23	row:10	colmn:2
5	ASSIGN	=	row:10	colmn:3
3	CHR	'x'	row:10	colmn:4
9	SEMI	;	row:10	colmn:5
28	CONSTYP	const	row:11	colmn:0
26	CHARTYP	char	row:11	colmn:1
2	IDEN	cst24	row:11	colmn:2
5	ASSIGN	=	row:11	colmn:3
3	CHR	'y'	row:11	colmn:4
8	COMMA	,	row:11	colmn:5
2	IDEN	cst25	row:11	colmn:6
5	ASSIGN	=	row:11	colmn:7
3	CHR	'z'	row:11	colmn:8
9	SEMI	;	row:11	colmn:9
28	CONSTYP	const	row:12	colmn:0
26	CHARTYP	char	row:12	colmn:1
2	IDEN	csta0	row:12	colmn:2
5	ASSIGN	=	row:12	colmn:3
3	CHR	'A'	row:12	colmn:4
8	COMMA	,	row:12	colmn:5
2	IDEN	csta1	row:12	colmn:6
5	ASSIGN	=	row:12	colmn:7
3	CHR	'B'	row:12	colmn:8
8	COMMA	,	row:12	colmn:9
2	IDEN	csta2	row:12	colmn:10
5	ASSIGN	=	row:12	colmn:11
3	CHR	'C'	row:12	colmn:12
9	SEMI	;	row:12	colmn:13
28	CONSTYP	const	row:13	colmn:0
26	CHARTYP	char	row:13	colmn:1
2	IDEN	numcst0	row:13	colmn:2
5	ASSIGN	=	row:13	colmn:3
3	CHR	'0'	row:13	colmn:4
8	COMMA	,	row:13	colmn:5
2	IDEN	numcst1	row:13	colmn:6
5	ASSIGN	=	row:13	colmn:7
3	CHR	'1'	row:13	colmn:8
8	COMMA	,	row:13	colmn:9
2	IDEN	numcst2	row:13	colmn:10
5	ASSIGN	=	row:13	colmn:11
3	CHR	'2'	row:13	colmn:12
8	COMMA	,	row:13	colmn:13
2	IDEN	numcst3	row:13	colmn:14
5	ASSIGN	=	row:13	colmn:15
3	CHR	'3'	row:13	colmn:16
8	COMMA	,	row:13	colmn:17
2	IDEN	numcst4	row:13	colmn:18
5	ASSIGN	=	row:13	colmn:19
3	CHR	'4'	row:13	colmn:20
8	COMMA	,	row:13	colmn:21
2	IDEN	numcst5	row:13	colmn:22
5	ASSIGN	=	row:13	colmn:23
3	CHR	'5'	row:13	colmn:24
8	COMMA	,	row:13	colmn:25
2	IDEN	numcst6	row:13	colmn:26
5	ASSIGN	=	row:13	colmn:27
3	CHR	'6'	row:13	colmn:28
8	COMMA	,	row:13	colmn:29
2	IDEN	numcst7	row:13	colmn:30
5	ASSIGN	=	row:13	colmn:31
3	CHR	'7'	row:13	colmn:32
8	COMMA	,	row:13	colmn:33
2	IDEN	numcst8	row:13	colmn:34
5	ASSIGN	=	row:13	colmn:35
3	CHR	'8'	row:13	colmn:36
8	COMMA	,	row:13	colmn:37
2	IDEN	numcst9	row:13	colmn:38
5	ASSIGN	=	row:13	colmn:39
3	CHR	'9'	row:13	colmn:40
9	SEMI	;	row:13	colmn:41
28	CONSTYP	const	row:14	colmn:0
26	CHARTYP	char	row:14	colmn:1
2	IDEN	cst_plus	row:14	colmn:2
5	ASSIGN	=	row:14	colmn:3
3	CHR	'+'	row:14	colmn:4
8	COMMA	,	row:14	colmn:5
2	IDEN	cst_minus	row:14	colmn:6
5	ASSIGN	=	row:14	colmn:7
3	CHR	'-'	row:14	colmn:8
8	COMMA	,	row:14	colmn:9
2	IDEN	cst_mul	row:14	colmn:10
5	ASSIGN	=	row:14	colmn:11
3	CHR	'*'	row:14	colmn:12
8	COMMA	,	row:14	colmn:13
2	IDEN	cst_div	row:14	colmn:14
5	ASSIGN	=	row:14	colmn:15
3	CHR	'/'	row:14	colmn:16
9	SEMI	;	row:14	colmn:17
35	PRINTFUNC	printf	row:16	colmn:0
11	LPAR	(	row:16	colmn:1
2	IDEN	a	row:16	colmn:2
12	RPAR	)	row:16	colmn:3
9	SEMI	;	row:16	colmn:4
35	PRINTFUNC	printf	row:17	colmn:0
11	LPAR	(	row:17	colmn:1
2	IDEN	b	row:17	colmn:2
12	RPAR	)	row:17	colmn:3
9	SEMI	;	row:17	colmn:4
35	PRINTFUNC	printf	row:18	colmn:0
11	LPAR	(	row:18	colmn:1
2	IDEN	c	row:18	colmn:2
12	RPAR	)	row:18	colmn:3
9	SEMI	;	row:18	colmn:4
35	PRINTFUNC	printf	row:20	colmn:0
11	LPAR	(	row:20	colmn:1
2	IDEN	numcst0	row:20	colmn:2
12	RPAR	)	row:20	colmn:3
9	SEMI	;	row:20	colmn:4
35	PRINTFUNC	printf	row:21	colmn:0
11	LPAR	(	row:21	colmn:1
2	IDEN	numcst1	row:21	colmn:2
12	RPAR	)	row:21	colmn:3
9	SEMI	;	row:21	colmn:4
35	PRINTFUNC	printf	row:22	colmn:0
11	LPAR	(	row:22	colmn:1
2	IDEN	numcst2	row:22	colmn:2
12	RPAR	)	row:22	colmn:3
9	SEMI	;	row:22	colmn:4
35	PRINTFUNC	printf	row:23	colmn:0
11	LPAR	(	row:23	colmn:1
2	IDEN	numcst3	row:23	colmn:2
12	RPAR	)	row:23	colmn:3
9	SEMI	;	row:23	colmn:4
35	PRINTFUNC	printf	row:24	colmn:0
11	LPAR	(	row:24	colmn:1
2	IDEN	numcst4	row:24	colmn:2
12	RPAR	)	row:24	colmn:3
9	SEMI	;	row:24	colmn:4
35	PRINTFUNC	printf	row:25	colmn:0
11	LPAR	(	row:25	colmn:1
2	IDEN	numcst5	row:25	colmn:2
12	RPAR	)	row:25	colmn:3
9	SEMI	;	row:25	colmn:4
35	PRINTFUNC	printf	row:26	colmn:0
11	LPAR	(	row:26	colmn:1
2	IDEN	numcst6	row:26	colmn:2
12	RPAR	)	row:26	colmn:3
9	SEMI	;	row:26	colmn:4
35	PRINTFUNC	printf	row:27	colmn:0
11	LPAR	(	row:27	colmn:1
2	IDEN	numcst7	row:27	colmn:2
12	RPAR	)	row:27	colmn:3
9	SEMI	;	row:27	colmn:4
35	PRINTFUNC	printf	row:28	colmn:0
11	LPAR	(	row:28	colmn:1
2	IDEN	numcst8	row:28	colmn:2
12	RPAR	)	row:28	colmn:3
9	SEMI	;	row:28	colmn:4
35	PRINTFUNC	printf	row:29	colmn:0
11	LPAR	(	row:29	colmn:1
2	IDEN	numcst9	row:29	colmn:2
12	RPAR	)	row:29	colmn:3
9	SEMI	;	row:29	colmn:4
35	PRINTFUNC	printf	row:31	colmn:0
11	LPAR	(	row:31	colmn:1
2	IDEN	cst23	row:31	colmn:2
12	RPAR	)	row:31	colmn:3
9	SEMI	;	row:31	colmn:4
35	PRINTFUNC	printf	row:32	colmn:0
11	LPAR	(	row:32	colmn:1
2	IDEN	cst24	row:32	colmn:2
12	RPAR	)	row:32	colmn:3
9	SEMI	;	row:32	colmn:4
35	PRINTFUNC	printf	row:33	colmn:0
11	LPAR	(	row:33	colmn:1
2	IDEN	cst25	row:33	colmn:2
12	RPAR	)	row:33	colmn:3
9	SEMI	;	row:33	colmn:4
35	PRINTFUNC	printf	row:35	colmn:0
11	LPAR	(	row:35	colmn:1
2	IDEN	csta0	row:35	colmn:2
12	RPAR	)	row:35	colmn:3
9	SEMI	;	row:35	colmn:4
35	PRINTFUNC	printf	row:36	colmn:0
11	LPAR	(	row:36	colmn:1
2	IDEN	csta1	row:36	colmn:2
12	RPAR	)	row:36	colmn:3
9	SEMI	;	row:36	colmn:4
35	PRINTFUNC	printf	row:37	colmn:0
11	LPAR	(	row:37	colmn:1
2	IDEN	csta2	row:37	colmn:2
12	RPAR	)	row:37	colmn:3
9	SEMI	;	row:37	colmn:4
35	PRINTFUNC	printf	row:38	colmn:0
11	LPAR	(	row:38	colmn:1
2	IDEN	cst_plus	row:38	colmn:2
12	RPAR	)	row:38	colmn:3
9	SEMI	;	row:38	colmn:4
35	PRINTFUNC	printf	row:39	colmn:0
11	LPAR	(	row:39	colmn:1
2	IDEN	cst_minus	row:39	colmn:2
12	RPAR	)	row:39	colmn:3
9	SEMI	;	row:39	colmn:4
35	PRINTFUNC	printf	row:40	colmn:0
11	LPAR	(	row:40	colmn:1
2	IDEN	cst_mul	row:40	colmn:2
12	RPAR	)	row:40	colmn:3
9	SEMI	;	row:40	colmn:4
35	PRINTFUNC	printf	row:41	colmn:0
11	LPAR	(	row:41	colmn:1
2	IDEN	cst_div	row:41	colmn:2
12	RPAR	)	row:41	colmn:3
9	SEMI	;	row:41	colmn:4
7	RCURB	}	row:42	colmn:0
27	NOTYP	void	row:44	colmn:0
2	IDEN	const_define_test	row:44	colmn:1
11	LPAR	(	row:44	colmn:2
12	RPAR	)	row:44	colmn:3
6	LCURB	{	row:44	colmn:4
2	IDEN	const_define	row:45	colmn:0
11	LPAR	(	row:45	colmn:1
12	RPAR	)	row:45	colmn:2
9	SEMI	;	row:45	colmn:3
7	RCURB	}	row:46	colmn:0
27	NOTYP	void	row:48	colmn:0
2	IDEN	var_define	row:48	colmn:1
11	LPAR	(	row:48	colmn:2
12	RPAR	)	row:48	colmn:3
6	LCURB	{	row:48	colmn:4
25	INTYP	int	row:49	colmn:0
2	IDEN	a	row:49	colmn:1
8	COMMA	,	row:49	colmn:2
2	IDEN	arr	row:49	colmn:3
13	LBRAK	[	row:49	colmn:4
1	INT	1	row:49	colmn:5
14	RBRAK	]	row:49	colmn:6
8	COMMA	,	row:49	colmn:7
2	IDEN	_a	row:49	colmn:8
8	COMMA	,	row:49	colmn:9
2	IDEN	_arr	row:49	colmn:10
13	LBRAK	[	row:49	colmn:11
1	INT	2	row:49	colmn:12
14	RBRAK	]	row:49	colmn:13
8	COMMA	,	row:49	colmn:14
2	IDEN	a1	row:49	colmn:15
8	COMMA	,	row:49	colmn:16
2	IDEN	arr1	row:49	colmn:17
13	LBRAK	[	row:49	colmn:18
1	INT	3	row:49	colmn:19
14	RBRAK	]	row:49	colmn:20
8	COMMA	,	row:49	colmn:21
2	IDEN	_ab_2	row:49	colmn:22
8	COMMA	,	row:49	colmn:23
2	IDEN	_arrb_2	row:49	colmn:24
13	LBRAK	[	row:49	colmn:25
1	INT	4	row:49	colmn:26
14	RBRAK	]	row:49	colmn:27
9	SEMI	;	row:49	colmn:28
26	CHARTYP	char	row:50	colmn:0
2	IDEN	b	row:50	colmn:1
8	COMMA	,	row:50	colmn:2
2	IDEN	strb	row:50	colmn:3
13	LBRAK	[	row:50	colmn:4
1	INT	1	row:50	colmn:5
14	RBRAK	]	row:50	colmn:6
8	COMMA	,	row:50	colmn:7
2	IDEN	_b	row:50	colmn:8
8	COMMA	,	row:50	colmn:9
2	IDEN	_bstr	row:50	colmn:10
13	LBRAK	[	row:50	colmn:11
1	INT	2	row:50	colmn:12
14	RBRAK	]	row:50	colmn:13
8	COMMA	,	row:50	colmn:14
2	IDEN	_b_	row:50	colmn:15
8	COMMA	,	row:50	colmn:16
2	IDEN	_bstr_	row:50	colmn:17
13	LBRAK	[	row:50	colmn:18
1	INT	3	row:50	colmn:19
14	RBRAK	]	row:50	colmn:20
8	COMMA	,	row:50	colmn:21
2	IDEN	b2_	row:50	colmn:22
8	COMMA	,	row:50	colmn:23
2	IDEN	bstr2_	row:50	colmn:24
13	LBRAK	[	row:50	colmn:25
1	INT	4	row:50	colmn:26
14	RBRAK	]	row:50	colmn:27
9	SEMI	;	row:50	colmn:28
25	INTYP	int	row:51	colmn:0
2	IDEN	c	row:51	colmn:1
8	COMMA	,	row:51	colmn:2
2	IDEN	d	row:51	colmn:3
8	COMMA	,	row:51	colmn:4
2	IDEN	e	row:51	colmn:5
8	COMMA	,	row:51	colmn:6
2	IDEN	f	row:51	colmn:7
13	LBRAK	[	row:51	colmn:8
1	INT	1000	row:51	colmn:9
14	RBRAK	]	row:51	colmn:10
8	COMMA	,	row:51	colmn:11
2	IDEN	g	row:51	colmn:12
9	SEMI	;	row:51	colmn:13
26	CHARTYP	char	row:52	colmn:0
2	IDEN	z	row:52	colmn:1
8	COMMA	,	row:52	colmn:2
2	IDEN	y	row:52	colmn:3
8	COMMA	,	row:52	colmn:4
2	IDEN	____	row:52	colmn:5
8	COMMA	,	row:52	colmn:6
2	IDEN	_______	row:52	colmn:7
13	LBRAK	[	row:52	colmn:8
1	INT	100000	row:52	colmn:9
14	RBRAK	]	row:52	colmn:10
9	SEMI	;	row:52	colmn:11
7	RCURB	}	row:53	colmn:0
27	NOTYP	void	row:54	colmn:0
2	IDEN	var_define_test	row:54	colmn:1
11	LPAR	(	row:54	colmn:2
12	RPAR	)	row:54	colmn:3
6	LCURB	{	row:54	colmn:4
2	IDEN	var_define	row:55	colmn:0
11	LPAR	(	row:55	colmn:1
12	RPAR	)	row:55	colmn:2
9	SEMI	;	row:55	colmn:3
7	RCURB	}	row:56	colmn:0
27	NOTYP	void	row:58	colmn:0
2	IDEN	define	row:58	colmn:1
11	LPAR	(	row:58	colmn:2
12	RPAR	)	row:58	colmn:3
6	LCURB	{	row:58	colmn:4
28	CONSTYP	const	row:59	colmn:0
25	INTYP	int	row:59	colmn:1
2	IDEN	a1	row:59	colmn:2
5	ASSIGN	=	row:59	colmn:3
1	INT	1	row:59	colmn:4
9	SEMI	;	row:59	colmn:5
28	CONSTYP	const	row:60	colmn:0
25	INTYP	int	row:60	colmn:1
2	IDEN	b1	row:60	colmn:2
5	ASSIGN	=	row:60	colmn:3
1	INT	0	row:60	colmn:4
8	COMMA	,	row:60	colmn:5
2	IDEN	c1	row:60	colmn:6
5	ASSIGN	=	row:60	colmn:7
16	MINUS	-	row:60	colmn:8
1	INT	1	row:60	colmn:9
9	SEMI	;	row:60	colmn:10
28	CONSTYP	const	row:61	colmn:0
26	CHARTYP	char	row:61	colmn:1
2	IDEN	cst0	row:61	colmn:2
5	ASSIGN	=	row:61	colmn:3
3	CHR	'a'	row:61	colmn:4
9	SEMI	;	row:61	colmn:5
28	CONSTYP	const	row:62	colmn:0
26	CHARTYP	char	row:62	colmn:1
2	IDEN	cst1	row:62	colmn:2
5	ASSIGN	=	row:62	colmn:3
3	CHR	'b'	row:62	colmn:4
8	COMMA	,	row:62	colmn:5
2	IDEN	cst2	row:62	colmn:6
5	ASSIGN	=	row:62	colmn:7
3	CHR	'c'	row:62	colmn:8
9	SEMI	;	row:62	colmn:9
28	CONSTYP	const	row:63	colmn:0
26	CHARTYP	char	row:63	colmn:1
2	IDEN	cst_plus	row:63	colmn:2
5	ASSIGN	=	row:63	colmn:3
3	CHR	'+'	row:63	colmn:4
8	COMMA	,	row:63	colmn:5
2	IDEN	cst_mninus	row:63	colmn:6
5	ASSIGN	=	row:63	colmn:7
3	CHR	'-'	row:63	colmn:8
8	COMMA	,	row:63	colmn:9
2	IDEN	cst_mul	row:63	colmn:10
5	ASSIGN	=	row:63	colmn:11
3	CHR	'*'	row:63	colmn:12
8	COMMA	,	row:63	colmn:13
2	IDEN	cst_div	row:63	colmn:14
5	ASSIGN	=	row:63	colmn:15
3	CHR	'/'	row:63	colmn:16
9	SEMI	;	row:63	colmn:17
25	INTYP	int	row:64	colmn:0
2	IDEN	a	row:64	colmn:1
8	COMMA	,	row:64	colmn:2
2	IDEN	arr	row:64	colmn:3
13	LBRAK	[	row:64	colmn:4
1	INT	1	row:64	colmn:5
14	RBRAK	]	row:64	colmn:6
8	COMMA	,	row:64	colmn:7
2	IDEN	_a	row:64	colmn:8
8	COMMA	,	row:64	colmn:9
2	IDEN	_arr	row:64	colmn:10
13	LBRAK	[	row:64	colmn:11
1	INT	2	row:64	colmn:12
14	RBRAK	]	row:64	colmn:13
8	COMMA	,	row:64	colmn:14
2	IDEN	a1	row:64	colmn:15
8	COMMA	,	row:64	colmn:16
