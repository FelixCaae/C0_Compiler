	int mod()
	para int a
	para int b
	a < 0
	BNZ if_1
	$tmp1 = a + b
	ret $tmp1
if_1:
	$tmp2 = a - b
	push $tmp2
	push b
	call mod
	$tmp3 = RET
	ret $tmp3
	int ping()
	para int a
	var int target
	target = 10 
	a > target
	BNZ if_2
	$tmp1 = a - target
	$tmp3 = $tmp1 - 1
	$tmp4 = target - $tmp3
	push $tmp4
	call ping
	$tmp5 = RET
	ret $tmp5
if_2:
	a < target
	BNZ if_3
	$tmp6 = target - a
	$tmp8 = $tmp6 - 1
	$tmp9 = target + $tmp8
	push $tmp9
	call ping
	$tmp10 = RET
	ret $tmp10
if_3:
	a == target
	BNZ if_4
	ret a
if_4:
	int ischar()
	para int a
	a == 95
	BNZ if_5
	ret 1
if_5:
	a >= 65
	BNZ if_6
	a <= 90
	BNZ if_7
	ret 1
if_7:
if_6:
	a >= 97
	BNZ if_8
	a <= 122
	BNZ if_9
	ret 1
if_9:
if_8:
	a == 95
	BNZ if_10
	ret 1
if_10:
	ret 0
	int tochar()
	para int a
	var char c
	c = 95 
	push a
	call ischar
	$tmp1 = RET
	$tmp1 != 0
	BNZ if_11
	c = a 
if_11:
	ret c
	int itself()
	para int a
	ret a
	int max()
	para int a
	para int b
	a >= b
	BNZ if_12
	ret a
if_12:
	ret b
	int min()
	para int a
	para int b
	a <= b
	BNZ if_13
	ret a
if_13:
	ret b
	int power()
	para int a
	para int b
	var int i
	var int c
	i = 0 
	c = a 
do_14:
	$tmp1 = a * c
	a = $tmp1 
	$tmp3 = i + 1
	i = $tmp3 
	$tmp5 = i + 1
	$tmp5 < b
	BZ do_14
	ret a
	int get0()
	var int i
	i = 0 
do_15:
	i != 0
	BZ do_15
	ret i
	int alphabet()
	var int i
	var char ch
	i = 50 
do_16:
	push i
	call ischar
	$tmp1 = RET
	$tmp1 != 0
	BNZ if_17
	ch = i 
	print ch
if_17:
	$tmp4 = i + 1
	i = $tmp4 
	i != 128
	BZ do_16
	int f3()
	ret 10
	int fun_def_test()
	var int c
	var int c2
	print "Please input a number (1-100): "
	read c
	print "the max number is:"
	push c
	call itself
	$tmp0 = RET
	push $tmp0
	call f3
	$tmp1 = RET
	push $tmp1
	call max
	$tmp2 = RET
	print $tmp2
	print "Please input two numbers (1-100): "
	read c
	read c2
	print "the power is"
	push c
	push c2
	call itself
	$tmp3 = RET
	push $tmp3
	call min
	$tmp4 = RET
	push $tmp4
	push c
	push c2
	call max
	$tmp5 = RET
	push $tmp5
	call power
	$tmp6 = RET
	print $tmp6
	int arg4()
	para int a
	para int b
	para int c
	para int d
	$tmp0 = a + b
	$tmp1 = $tmp0 + c
	$tmp2 = $tmp1 + d
	ret $tmp2
	int arg12()
	para int a
	para int b
	para int c
	para int d
	para char e
	para char f
	para int g
	para int h
	para char i
	para int j
	para int k
	para int l
	print e
	$tmp0 = a + b
	$tmp1 = $tmp0 + c
	$tmp2 = $tmp1 + d
	$tmp3 = $tmp2 + e
	$tmp4 = $tmp3 + f
	$tmp5 = $tmp4 + g
	$tmp6 = $tmp5 + h
	$tmp7 = $tmp6 + i
	$tmp8 = $tmp7 + j
	$tmp9 = $tmp8 + k
	$tmp10 = $tmp9 + l
	ret $tmp10
	int testarg()
	const int _1 = 1
	const int _2 = 2
	var int _3
	var int _4
	var char _e
	_3 = 3 
	_4 = 4 
	_e = 101 
	print "4argfunc call,result should be 6:"
	push 1
	push 1
	push 2
	push 2
	call arg4
	$tmp5 = RET
	print $tmp5
	print "12arg func call result should be 327"
	push 1
	push 2
	push _3
	push _4
	push _e
	push 102
	push 1
	push 2
	push 105
	push 1
	push 2
	push 3
	call arg12
	$tmp12 = RET
	print $tmp12
	int testmod()
	var int result
	print "10 mod 3 ="
	push 10
	push 3
	call mod
	$tmp2 = RET
	print $tmp2
	print "17 mod 4 ="
	push 17
	push 4
	call mod
	$tmp5 = RET
	print $tmp5
	print "100 mod 5 ="
	push 100
	push 5
	call mod
	$tmp8 = RET
	print $tmp8
	print "0 mod 10 ="
	push 0
	push 10
	call mod
	$tmp11 = RET
	print $tmp11
	int testping()
	push 1
	call ping
	push 20
	call ping
	void main()
	var int var1
	var int var2
	push 5
	push 2
	call min
	$tmp2 = RET
	var1 = $tmp2 
	push 5
	push 2
	call max
	$tmp5 = RET
	var2 = $tmp5 
	call fun_def_test
	call alphabet
	call testarg
	call testmod
	call testping
