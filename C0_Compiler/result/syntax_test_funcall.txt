<program>
  <varDeclGroup>
    <varDecl>
      <type>
      <keyword> int <\keyword>
      <\type>
    <identifier> mod <\identifier>
    <\retract>
  <\varDeclGroup>
  <funcDecl>
    <type>
    <keyword> int <\keyword>
    <\type>
  <seperator> mod <\seperator>
    <paramList>
    <seperator> ( <\seperator>
      <type>
      <keyword> int <\keyword>
      <\type>
    <identifier> a <\identifier>
    <seperator> , <\seperator>
      <type>
      <keyword> int <\keyword>
      <\type>
    <identifier> b <\identifier>
    <seperator> ) <\seperator>
    <\paramList>
  <seperator> { <\seperator>
    <compoundStatement>
      <statements>
        <statement>
          <constant>
          <keyword> if <\keyword>
          <seperator> ( <\seperator>
            <condition>
              <expression>
                <term>
                  <factor>
                  <identifier> a <\identifier>
                  <\factor>
                <\term>
              <\expression>
              <identifier>
              <seperator> < <\seperator>
              <\identifier>
              <expression>
                <term>
                  <factor>
                  <unsignedInt> 0 <\unsignedInt>
                  <\factor>
                <\term>
              <\expression>
            <\condition>
          <seperator> ) <\seperator>
            <statement>
              <returnStat>
              <keyword> return <\keyword>
              <seperator> ( <\seperator>
                <expression>
                  <term>
                    <factor>
                    <identifier> a <\identifier>
                    <\factor>
                  <\term>
                <seperator> + <\seperator>
                  <term>
                    <factor>
                    <identifier> b <\identifier>
                    <\factor>
                  <\term>
                <\expression>
              <seperator> ) <\seperator>
              <\returnStat>
            <seperator> ; <\seperator>
            <\statement>
          <\constant>
        <\statement>
        <statement>
          <returnStat>
          <keyword> return <\keyword>
          <seperator> ( <\seperator>
            <expression>
              <term>
                <factor>
                <identifier> mod <\identifier>
                  <funCallStat>
                  <seperator> ( <\seperator>
                    <argumentList>
                      <expression>
                        <term>
                          <factor>
                          <identifier> a <\identifier>
                          <\factor>
                        <\term>
                      <seperator> - <\seperator>
                        <term>
                          <factor>
                          <identifier> b <\identifier>
                          <\factor>
                        <\term>
                      <\expression>
                    <seperator> , <\seperator>
                      <expression>
                        <term>
                          <factor>
                          <identifier> b <\identifier>
                          <\factor>
                        <\term>
                      <\expression>
                    <\argumentList>
                  <seperator> ) <\seperator>
                  <\funCallStat>
                <\factor>
              <\term>
            <\expression>
          <seperator> ) <\seperator>
          <\returnStat>
        <seperator> ; <\seperator>
        <\statement>
      <\statements>
    <\compoundStatement>
  <seperator> } <\seperator>
  <\funcDecl>
  <funcDecl>
    <type>
    <keyword> int <\keyword>
    <\type>
  <identifier> ping <\identifier>
    <paramList>
    <seperator> ( <\seperator>
      <type>
      <keyword> int <\keyword>
      <\type>
    <identifier> a <\identifier>
    <seperator> ) <\seperator>
    <\paramList>
  <seperator> { <\seperator>
    <compoundStatement>
      <varDeclGroup>
        <varDecl>
          <type>
          <keyword> int <\keyword>
          <\type>
        <identifier> target <\identifier>
        <\varDecl>
      <seperator> ; <\seperator>
      <\varDeclGroup>
      <statements>
        <statement>
        <identifier> target <\identifier>
          <assignStat>
          <seperator> = <\seperator>
            <expression>
              <term>
                <factor>
                <unsignedInt> 10 <\unsignedInt>
                <\factor>
              <\term>
            <\expression>
          <\assignStat>
        <seperator> ; <\seperator>
        <\statement>
        <statement>
          <constant>
          <keyword> if <\keyword>
          <seperator> ( <\seperator>
            <condition>
              <expression>
                <term>
                  <factor>
                  <identifier> a <\identifier>
                  <\factor>
                <\term>
              <\expression>
              <identifier>
              <seperator> > <\seperator>
              <\identifier>
              <expression>
                <term>
                  <factor>
                  <identifier> target <\identifier>
                  <\factor>
                <\term>
              <\expression>
            <\condition>
          <seperator> ) <\seperator>
            <statement>
            <seperator> { <\seperator>
              <statements>
                <statement>
                  <returnStat>
                  <keyword> return <\keyword>
                  <seperator> ( <\seperator>
                    <expression>
                      <term>
                        <factor>
                        <identifier> ping <\identifier>
                          <funCallStat>
                          <seperator> ( <\seperator>
                            <argumentList>
                              <expression>
                                <term>
                                  <factor>
                                  <identifier> target <\identifier>
                                  <\factor>
                                <\term>
                              <seperator> - <\seperator>
                                <term>
                                  <factor>
                                  <seperator> ( <\seperator>
                                    <expression>
                                      <term>
                                        <factor>
                                        <identifier> a <\identifier>
                                        <\factor>
                                      <\term>
                                    <seperator> - <\seperator>
                                      <term>
                                        <factor>
                                        <identifier> target <\identifier>
                                        <\factor>
                                      <\term>
                                    <seperator> - <\seperator>
                                      <term>
                                        <factor>
                                        <unsignedInt> 1 <\unsignedInt>
                                        <\factor>
                                      <\term>
                                    <\expression>
                                  <seperator> ) <\seperator>
                                  <\factor>
                                <\term>
                              <\expression>
                            <\argumentList>
                          <seperator> ) <\seperator>
                          <\funCallStat>
                        <\factor>
                      <\term>
                    <\expression>
                  <seperator> ) <\seperator>
                  <\returnStat>
                <seperator> ; <\seperator>
                <\statement>
              <\statements>
            <seperator> } <\seperator>
            <\statement>
          <\constant>
        <\statement>
        <statement>
          <constant>
          <keyword> if <\keyword>
          <seperator> ( <\seperator>
            <condition>
              <expression>
                <term>
                  <factor>
                  <identifier> a <\identifier>
                  <\factor>
                <\term>
              <\expression>
              <identifier>
              <seperator> < <\seperator>
              <\identifier>
              <expression>
                <term>
                  <factor>
                  <identifier> target <\identifier>
                  <\factor>
                <\term>
              <\expression>
            <\condition>
          <seperator> ) <\seperator>
            <statement>
            <seperator> { <\seperator>
              <statements>
                <statement>
                  <returnStat>
                  <keyword> return <\keyword>
                  <seperator> ( <\seperator>
                    <expression>
                      <term>
                        <factor>
                        <identifier> ping <\identifier>
                          <funCallStat>
                          <seperator> ( <\seperator>
                            <argumentList>
                              <expression>
                                <term>
                                  <factor>
                                  <identifier> target <\identifier>
                                  <\factor>
                                <\term>
                              <seperator> + <\seperator>
                                <term>
                                  <factor>
                                  <seperator> ( <\seperator>
                                    <expression>
                                      <term>
                                        <factor>
                                        <identifier> target <\identifier>
                                        <\factor>
                                      <\term>
                                    <seperator> - <\seperator>
                                      <term>
                                        <factor>
                                        <identifier> a <\identifier>
                                        <\factor>
                                      <\term>
                                    <seperator> - <\seperator>
                                      <term>
                                        <factor>
                                        <unsignedInt> 1 <\unsignedInt>
                                        <\factor>
                                      <\term>
                                    <\expression>
                                  <seperator> ) <\seperator>
                                  <\factor>
                                <\term>
                              <\expression>
                            <\argumentList>
                          <seperator> ) <\seperator>
                          <\funCallStat>
                        <\factor>
                      <\term>
                    <\expression>
                  <seperator> ) <\seperator>
                  <\returnStat>
                <seperator> ; <\seperator>
                <\statement>
              <\statements>
            <seperator> } <\seperator>
            <\statement>
          <\constant>
        <\statement>
        <statement>
          <constant>
          <keyword> if <\keyword>
          <seperator> ( <\seperator>
            <condition>
              <expression>
                <term>
                  <factor>
                  <identifier> a <\identifier>
                  <\factor>
                <\term>
              <\expression>
              <identifier>
              <seperator> == <\seperator>
              <\identifier>
              <expression>
                <term>
                  <factor>
                  <identifier> target <\identifier>
                  <\factor>
                <\term>
              <\expression>
            <\condition>
          <seperator> ) <\seperator>
            <statement>
            <seperator> { <\seperator>
              <statements>
                <statement>
                  <returnStat>
                  <keyword> return <\keyword>
                  <seperator> ( <\seperator>
                    <expression>
                      <term>
                        <factor>
                        <identifier> a <\identifier>
                        <\factor>
                      <\term>
                    <\expression>
                  <seperator> ) <\seperator>
                  <\returnStat>
                <seperator> ; <\seperator>
                <\statement>
              <\statements>
            <seperator> } <\seperator>
            <\statement>
          <\constant>
        <\statement>
      <\statements>
    <\compoundStatement>
  <seperator> } <\seperator>
  <\funcDecl>
  <funcDecl>
    <type>
    <keyword> int <\keyword>
    <\type>
  <identifier> ischar <\identifier>
    <paramList>
    <seperator> ( <\seperator>
      <type>
      <keyword> int <\keyword>
      <\type>
    <identifier> a <\identifier>
    <seperator> ) <\seperator>
    <\paramList>
  <seperator> { <\seperator>
    <compoundStatement>
      <statements>
        <statement>
          <constant>
          <keyword> if <\keyword>
          <seperator> ( <\seperator>
            <condition>
              <expression>
                <term>
                  <factor>
                  <identifier> a <\identifier>
                  <\factor>
                <\term>
              <\expression>
              <identifier>
              <seperator> == <\seperator>
              <\identifier>
              <expression>
                <term>
                  <factor>
                  <unsignedInt> 95 <\unsignedInt>
                  <\factor>
                <\term>
              <\expression>
            <\condition>
          <seperator> ) <\seperator>
            <statement>
              <returnStat>
              <keyword> return <\keyword>
              <seperator> ( <\seperator>
                <expression>
                  <term>
                    <factor>
                    <unsignedInt> 1 <\unsignedInt>
                    <\factor>
                  <\term>
                <\expression>
              <seperator> ) <\seperator>
              <\returnStat>
            <seperator> ; <\seperator>
            <\statement>
          <\constant>
        <\statement>
        <statement>
          <constant>
          <keyword> if <\keyword>
          <seperator> ( <\seperator>
            <condition>
              <expression>
                <term>
                  <factor>
                  <identifier> a <\identifier>
                  <\factor>
                <\term>
              <\expression>
              <identifier>
              <seperator> >= <\seperator>
              <\identifier>
              <expression>
                <term>
                  <factor>
                  <unsignedInt> 65 <\unsignedInt>
                  <\factor>
                <\term>
              <\expression>
            <\condition>
          <seperator> ) <\seperator>
            <statement>
              <constant>
              <keyword> if <\keyword>
              <seperator> ( <\seperator>
                <condition>
                  <expression>
                    <term>
                      <factor>
                      <identifier> a <\identifier>
                      <\factor>
                    <\term>
                  <\expression>
                  <identifier>
                  <seperator> <= <\seperator>
                  <\identifier>
                  <expression>
                    <term>
                      <factor>
                      <unsignedInt> 90 <\unsignedInt>
                      <\factor>
                    <\term>
                  <\expression>
                <\condition>
              <seperator> ) <\seperator>
                <statement>
                  <returnStat>
                  <keyword> return <\keyword>
                  <seperator> ( <\seperator>
                    <expression>
                      <term>
                        <factor>
                        <unsignedInt> 1 <\unsignedInt>
                        <\factor>
                      <\term>
                    <\expression>
                  <seperator> ) <\seperator>
                  <\returnStat>
                <seperator> ; <\seperator>
                <\statement>
              <\constant>
            <\statement>
          <\constant>
        <\statement>
        <statement>
          <constant>
          <keyword> if <\keyword>
          <seperator> ( <\seperator>
            <condition>
              <expression>
                <term>
                  <factor>
                  <identifier> a <\identifier>
                  <\factor>
                <\term>
              <\expression>
              <identifier>
              <seperator> >= <\seperator>
              <\identifier>
              <expression>
                <term>
                  <factor>
                  <unsignedInt> 97 <\unsignedInt>
                  <\factor>
                <\term>
              <\expression>
            <\condition>
          <seperator> ) <\seperator>
            <statement>
              <constant>
              <keyword> if <\keyword>
              <seperator> ( <\seperator>
                <condition>
                  <expression>
                    <term>
                      <factor>
                      <identifier> a <\identifier>
                      <\factor>
                    <\term>
                  <\expression>
                  <identifier>
                  <seperator> <= <\seperator>
                  <\identifier>
                  <expression>
                    <term>
                      <factor>
                      <unsignedInt> 122 <\unsignedInt>
                      <\factor>
                    <\term>
                  <\expression>
                <\condition>
              <seperator> ) <\seperator>
                <statement>
                  <returnStat>
                  <keyword> return <\keyword>
                  <seperator> ( <\seperator>
                    <expression>
                      <term>
                        <factor>
                        <unsignedInt> 1 <\unsignedInt>
                        <\factor>
                      <\term>
                    <\expression>
                  <seperator> ) <\seperator>
                  <\returnStat>
                <seperator> ; <\seperator>
                <\statement>
              <\constant>
            <\statement>
          <\constant>
        <\statement>
        <statement>
          <constant>
          <keyword> if <\keyword>
          <seperator> ( <\seperator>
            <condition>
              <expression>
                <term>
                  <factor>
                  <identifier> a <\identifier>
                  <\factor>
                <\term>
              <\expression>
              <identifier>
              <seperator> == <\seperator>
              <\identifier>
              <expression>
                <term>
                  <factor>
                  <unsignedInt> 95 <\unsignedInt>
                  <\factor>
                <\term>
              <\expression>
            <\condition>
          <seperator> ) <\seperator>
            <statement>
              <returnStat>
              <keyword> return <\keyword>
              <seperator> ( <\seperator>
                <expression>
                  <term>
                    <factor>
                    <unsignedInt> 1 <\unsignedInt>
                    <\factor>
                  <\term>
                <\expression>
              <seperator> ) <\seperator>
              <\returnStat>
            <seperator> ; <\seperator>
            <\statement>
          <\constant>
        <\statement>
        <statement>
          <returnStat>
          <keyword> return <\keyword>
          <seperator> ( <\seperator>
            <expression>
              <term>
                <factor>
                <unsignedInt> 0 <\unsignedInt>
                <\factor>
              <\term>
            <\expression>
          <seperator> ) <\seperator>
          <\returnStat>
        <seperator> ; <\seperator>
        <\statement>
      <\statements>
    <\compoundStatement>
  <seperator> } <\seperator>
  <\funcDecl>
  <funcDecl>
    <type>
    <keyword> char <\keyword>
    <\type>
  <identifier> tochar <\identifier>
    <paramList>
    <seperator> ( <\seperator>
      <type>
      <keyword> int <\keyword>
      <\type>
    <identifier> a <\identifier>
    <seperator> ) <\seperator>
    <\paramList>
  <seperator> { <\seperator>
    <compoundStatement>
      <varDeclGroup>
        <varDecl>
          <type>
          <keyword> char <\keyword>
          <\type>
        <identifier> c <\identifier>
        <\varDecl>
      <seperator> ; <\seperator>
      <\varDeclGroup>
      <statements>
        <statement>
        <identifier> c <\identifier>
          <assignStat>
          <seperator> = <\seperator>
            <expression>
              <term>
                <factor>
                <char> '_' <\char>
                <\factor>
              <\term>
            <\expression>
          <\assignStat>
        <seperator> ; <\seperator>
        <\statement>
        <statement>
          <constant>
          <keyword> if <\keyword>
          <seperator> ( <\seperator>
            <condition>
              <expression>
                <term>
                  <factor>
                  <identifier> ischar <\identifier>
                    <funCallStat>
                    <seperator> ( <\seperator>
                      <argumentList>
                        <expression>
                          <term>
                            <factor>
                            <identifier> a <\identifier>
                            <\factor>
                          <\term>
                        <\expression>
                      <\argumentList>
                    <seperator> ) <\seperator>
                    <\funCallStat>
                  <\factor>
                <\term>
              <\expression>
            <\condition>
          <seperator> ) <\seperator>
            <statement>
            <seperator> { <\seperator>
              <statements>
                <statement>
                <identifier> c <\identifier>
                  <assignStat>
                  <seperator> = <\seperator>
                    <expression>
                      <term>
                        <factor>
                        <identifier> a <\identifier>
                        <\factor>
                      <\term>
                    <\expression>
                  <\assignStat>
                <seperator> ; <\seperator>
                <\statement>
              <\statements>
            <seperator> } <\seperator>
            <\statement>
          <\constant>
        <\statement>
        <statement>
          <returnStat>
          <keyword> return <\keyword>
          <seperator> ( <\seperator>
            <expression>
              <term>
                <factor>
                <identifier> c <\identifier>
                <\factor>
              <\term>
            <\expression>
          <seperator> ) <\seperator>
          <\returnStat>
        <seperator> ; <\seperator>
        <\statement>
      <\statements>
    <\compoundStatement>
  <seperator> } <\seperator>
  <\funcDecl>
  <funcDecl>
    <type>
    <keyword> int <\keyword>
    <\type>
  <identifier> itself <\identifier>
    <paramList>
    <seperator> ( <\seperator>
      <type>
      <keyword> int <\keyword>
      <\type>
    <identifier> a <\identifier>
    <seperator> ) <\seperator>
    <\paramList>
  <seperator> { <\seperator>
    <compoundStatement>
      <statements>
        <statement>
          <returnStat>
          <keyword> return <\keyword>
          <seperator> ( <\seperator>
            <expression>
              <term>
                <factor>
                <identifier> a <\identifier>
                <\factor>
              <\term>
            <\expression>
          <seperator> ) <\seperator>
          <\returnStat>
        <seperator> ; <\seperator>
        <\statement>
      <\statements>
    <\compoundStatement>
  <seperator> } <\seperator>
  <\funcDecl>
  <funcDecl>
    <type>
    <keyword> int <\keyword>
    <\type>
  <identifier> max <\identifier>
    <paramList>
    <seperator> ( <\seperator>
      <type>
      <keyword> int <\keyword>
      <\type>
    <identifier> a <\identifier>
    <seperator> , <\seperator>
      <type>
      <keyword> int <\keyword>
      <\type>
    <identifier> b <\identifier>
    <seperator> ) <\seperator>
    <\paramList>
  <seperator> { <\seperator>
    <compoundStatement>
      <statements>
        <statement>
          <constant>
          <keyword> if <\keyword>
          <seperator> ( <\seperator>
            <condition>
              <expression>
                <term>
                  <factor>
                  <identifier> a <\identifier>
                  <\factor>
                <\term>
              <\expression>
              <identifier>
              <seperator> >= <\seperator>
              <\identifier>
              <expression>
                <term>
                  <factor>
                  <identifier> b <\identifier>
                  <\factor>
                <\term>
              <\expression>
            <\condition>
          <seperator> ) <\seperator>
            <statement>
              <returnStat>
              <keyword> return <\keyword>
              <seperator> ( <\seperator>
                <expression>
                  <term>
                    <factor>
                    <identifier> a <\identifier>
                    <\factor>
                  <\term>
                <\expression>
              <seperator> ) <\seperator>
              <\returnStat>
            <seperator> ; <\seperator>
            <\statement>
          <\constant>
        <\statement>
        <statement>
          <returnStat>
          <keyword> return <\keyword>
          <seperator> ( <\seperator>
            <expression>
              <term>
                <factor>
                <identifier> b <\identifier>
                <\factor>
              <\term>
            <\expression>
          <seperator> ) <\seperator>
          <\returnStat>
        <seperator> ; <\seperator>
        <\statement>
      <\statements>
    <\compoundStatement>
  <seperator> } <\seperator>
  <\funcDecl>
  <funcDecl>
    <type>
    <keyword> int <\keyword>
    <\type>
  <identifier> min <\identifier>
    <paramList>
    <seperator> ( <\seperator>
      <type>
      <keyword> int <\keyword>
      <\type>
    <identifier> a <\identifier>
    <seperator> , <\seperator>
      <type>
      <keyword> int <\keyword>
      <\type>
    <identifier> b <\identifier>
    <seperator> ) <\seperator>
    <\paramList>
  <seperator> { <\seperator>
    <compoundStatement>
      <statements>
        <statement>
          <constant>
          <keyword> if <\keyword>
          <seperator> ( <\seperator>
            <condition>
              <expression>
                <term>
                  <factor>
                  <identifier> a <\identifier>
                  <\factor>
                <\term>
              <\expression>
              <identifier>
              <seperator> <= <\seperator>
              <\identifier>
              <expression>
                <term>
                  <factor>
                  <identifier> b <\identifier>
                  <\factor>
                <\term>
              <\expression>
            <\condition>
          <seperator> ) <\seperator>
            <statement>
              <returnStat>
              <keyword> return <\keyword>
              <seperator> ( <\seperator>
                <expression>
                  <term>
                    <factor>
                    <identifier> a <\identifier>
                    <\factor>
                  <\term>
                <\expression>
              <seperator> ) <\seperator>
              <\returnStat>
            <seperator> ; <\seperator>
            <\statement>
          <\constant>
        <\statement>
        <statement>
          <returnStat>
          <keyword> return <\keyword>
          <seperator> ( <\seperator>
            <expression>
              <term>
                <factor>
                <identifier> b <\identifier>
                <\factor>
              <\term>
            <\expression>
          <seperator> ) <\seperator>
          <\returnStat>
        <seperator> ; <\seperator>
        <\statement>
      <\statements>
    <\compoundStatement>
  <seperator> } <\seperator>
  <\funcDecl>
  <funcDecl>
    <type>
    <keyword> int <\keyword>
    <\type>
  <identifier> power <\identifier>
    <paramList>
    <seperator> ( <\seperator>
      <type>
      <keyword> int <\keyword>
      <\type>
    <identifier> a <\identifier>
    <seperator> , <\seperator>
      <type>
      <keyword> int <\keyword>
      <\type>
    <identifier> b <\identifier>
    <seperator> ) <\seperator>
    <\paramList>
  <seperator> { <\seperator>
    <compoundStatement>
      <varDeclGroup>
        <varDecl>
          <type>
          <keyword> int <\keyword>
          <\type>
        <identifier> i <\identifier>
        <seperator> , <\seperator>
        <identifier> c <\identifier>
        <\varDecl>
      <seperator> ; <\seperator>
      <\varDeclGroup>
      <statements>
        <statement>
        <identifier> i <\identifier>
          <assignStat>
          <seperator> = <\seperator>
            <expression>
              <term>
                <factor>
                <unsignedInt> 0 <\unsignedInt>
                <\factor>
              <\term>
            <\expression>
          <\assignStat>
        <seperator> ; <\seperator>
        <\statement>
        <statement>
        <identifier> c <\identifier>
          <assignStat>
          <seperator> = <\seperator>
            <expression>
              <term>
                <factor>
                <identifier> a <\identifier>
                <\factor>
              <\term>
            <\expression>
          <\assignStat>
        <seperator> ; <\seperator>
        <\statement>
        <statement>
          <loopStat>
          <keyword> do <\keyword>
            <statement>
            <seperator> { <\seperator>
              <statements>
                <statement>
                <identifier> a <\identifier>
                  <assignStat>
                  <seperator> = <\seperator>
                    <expression>
                      <term>
                        <factor>
                        <identifier> a <\identifier>
                        <\factor>
                      <seperator> * <\seperator>
                        <factor>
                        <identifier> c <\identifier>
                        <\factor>
                      <\term>
                    <\expression>
                  <\assignStat>
                <seperator> ; <\seperator>
                <\statement>
                <statement>
                <identifier> i <\identifier>
                  <assignStat>
                  <seperator> = <\seperator>
                    <expression>
                      <term>
                        <factor>
                        <identifier> i <\identifier>
                        <\factor>
                      <\term>
                    <seperator> + <\seperator>
                      <term>
                        <factor>
                        <unsignedInt> 1 <\unsignedInt>
                        <\factor>
                      <\term>
                    <\expression>
                  <\assignStat>
                <seperator> ; <\seperator>
                <\statement>
              <\statements>
            <seperator> } <\seperator>
            <\statement>
          <keyword> while <\keyword>
          <seperator> ( <\seperator>
            <condition>
              <expression>
                <term>
                  <factor>
                  <identifier> i <\identifier>
                  <\factor>
                <\term>
              <seperator> + <\seperator>
                <term>
                  <factor>
                  <unsignedInt> 1 <\unsignedInt>
                  <\factor>
                <\term>
   