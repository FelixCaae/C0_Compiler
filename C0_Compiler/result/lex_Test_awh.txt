28	CONSTYP	const	row:1	colmn:0
25	INTYP	int	row:1	colmn:1
2	IDEN	a	row:1	colmn:2
5	ASSIGN	=	row:1	colmn:3
15	PLUS	+	row:1	colmn:4
1	INT	5	row:1	colmn:5
9	SEMI	;	row:1	colmn:6
28	CONSTYP	const	row:2	colmn:0
26	CHARTYP	char	row:2	colmn:1
2	IDEN	m	row:2	colmn:2
5	ASSIGN	=	row:2	colmn:3
3	CHR	'3'	row:2	colmn:4
9	SEMI	;	row:2	colmn:5
28	CONSTYP	const	row:3	colmn:0
25	INTYP	int	row:3	colmn:1
2	IDEN	z	row:3	colmn:2
5	ASSIGN	=	row:3	colmn:3
1	INT	6	row:3	colmn:4
8	COMMA	,	row:3	colmn:5
2	IDEN	b	row:3	colmn:6
5	ASSIGN	=	row:3	colmn:7
1	INT	10	row:3	colmn:8
9	SEMI	;	row:3	colmn:9
28	CONSTYP	const	row:4	colmn:0
26	CHARTYP	char	row:4	colmn:1
2	IDEN	q	row:4	colmn:2
5	ASSIGN	=	row:4	colmn:3
3	CHR	's'	row:4	colmn:4
8	COMMA	,	row:4	colmn:5
2	IDEN	p	row:4	colmn:6
5	ASSIGN	=	row:4	colmn:7
3	CHR	't'	row:4	colmn:8
9	SEMI	;	row:4	colmn:9
25	INTYP	int	row:6	colmn:0
2	IDEN	aa	row:6	colmn:1
8	COMMA	,	row:6	colmn:2
2	IDEN	bb	row:6	colmn:3
8	COMMA	,	row:6	colmn:4
2	IDEN	cc	row:6	colmn:5
8	COMMA	,	row:6	colmn:6
2	IDEN	ss	row:6	colmn:7
13	LBRAK	[	row:6	colmn:8
1	INT	1	row:6	colmn:9
14	RBRAK	]	row:6	colmn:10
9	SEMI	;	row:6	colmn:11
26	CHARTYP	char	row:7	colmn:0
2	IDEN	mm	row:7	colmn:1
8	COMMA	,	row:7	colmn:2
2	IDEN	nn	row:7	colmn:3
8	COMMA	,	row:7	colmn:4
2	IDEN	zz	row:7	colmn:5
8	COMMA	,	row:7	colmn:6
2	IDEN	str_test	row:7	colmn:7
13	LBRAK	[	row:7	colmn:8
1	INT	50	row:7	colmn:9
14	RBRAK	]	row:7	colmn:10
9	SEMI	;	row:7	colmn:11
25	INTYP	int	row:8	colmn:0
2	IDEN	number	row:8	colmn:1
13	LBRAK	[	row:8	colmn:2
1	INT	30	row:8	colmn:3
14	RBRAK	]	row:8	colmn:4
9	SEMI	;	row:8	colmn:5
25	INTYP	int	row:9	colmn:0
2	IDEN	ra	row:9	colmn:1
8	COMMA	,	row:9	colmn:2
2	IDEN	rb	row:9	colmn:3
8	COMMA	,	row:9	colmn:4
2	IDEN	rc	row:9	colmn:5
8	COMMA	,	row:9	colmn:6
2	IDEN	rd	row:9	colmn:7
9	SEMI	;	row:9	colmn:8
27	NOTYP	void	row:11	colmn:0
2	IDEN	f5	row:11	colmn:1
11	LPAR	(	row:11	colmn:2
12	RPAR	)	row:11	colmn:3
6	LCURB	{	row:11	colmn:4
25	INTYP	int	row:12	colmn:0
2	IDEN	a	row:12	colmn:1
8	COMMA	,	row:12	colmn:2
2	IDEN	b	row:12	colmn:3
8	COMMA	,	row:12	colmn:4
2	IDEN	c	row:12	colmn:5
8	COMMA	,	row:12	colmn:6
2	IDEN	d	row:12	colmn:7
13	LBRAK	[	row:12	colmn:8
1	INT	10	row:12	colmn:9
14	RBRAK	]	row:12	colmn:10
8	COMMA	,	row:12	colmn:11
2	IDEN	e	row:12	colmn:12
13	LBRAK	[	row:12	colmn:13
1	INT	4	row:12	colmn:14
14	RBRAK	]	row:12	colmn:15
8	COMMA	,	row:12	colmn:16
2	IDEN	f	row:12	colmn:17
8	COMMA	,	row:12	colmn:18
2	IDEN	g	row:12	colmn:19
13	LBRAK	[	row:12	colmn:20
1	INT	5	row:12	colmn:21
14	RBRAK	]	row:12	colmn:22
8	COMMA	,	row:12	colmn:23
2	IDEN	k	row:12	colmn:24
8	COMMA	,	row:12	colmn:25
2	IDEN	l	row:12	colmn:26
13	LBRAK	[	row:12	colmn:27
1	INT	6	row:12	colmn:28
14	RBRAK	]	row:12	colmn:29
9	SEMI	;	row:12	colmn:30
25	INTYP	int	row:13	colmn:0
2	IDEN	m	row:13	colmn:1
13	LBRAK	[	row:13	colmn:2
1	INT	7	row:13	colmn:3
14	RBRAK	]	row:13	colmn:4
8	COMMA	,	row:13	colmn:5
2	IDEN	n	row:13	colmn:6
13	LBRAK	[	row:13	colmn:7
1	INT	8	row:13	colmn:8
14	RBRAK	]	row:13	colmn:9
8	COMMA	,	row:13	colmn:10
2	IDEN	p	row:13	colmn:11
8	COMMA	,	row:13	colmn:12
2	IDEN	q	row:13	colmn:13
8	COMMA	,	row:13	colmn:14
2	IDEN	h	row:13	colmn:15
13	LBRAK	[	row:13	colmn:16
1	INT	9	row:13	colmn:17
14	RBRAK	]	row:13	colmn:18
9	SEMI	;	row:13	colmn:19
26	CHARTYP	char	row:14	colmn:0
2	IDEN	i	row:14	colmn:1
8	COMMA	,	row:14	colmn:2
2	IDEN	o	row:14	colmn:3
13	LBRAK	[	row:14	colmn:4
1	INT	4	row:14	colmn:5
14	RBRAK	]	row:14	colmn:6
8	COMMA	,	row:14	colmn:7
2	IDEN	r	row:14	colmn:8
13	LBRAK	[	row:14	colmn:9
1	INT	5	row:14	colmn:10
14	RBRAK	]	row:14	colmn:11
8	COMMA	,	row:14	colmn:12
2	IDEN	s	row:14	colmn:13
8	COMMA	,	row:14	colmn:14
2	IDEN	t	row:14	colmn:15
8	COMMA	,	row:14	colmn:16
2	IDEN	u	row:14	colmn:17
13	LBRAK	[	row:14	colmn:18
1	INT	65	row:14	colmn:19
14	RBRAK	]	row:14	colmn:20
8	COMMA	,	row:14	colmn:21
2	IDEN	v___	row:14	colmn:22
9	SEMI	;	row:14	colmn:23
26	CHARTYP	char	row:15	colmn:0
2	IDEN	w	row:15	colmn:1
13	LBRAK	[	row:15	colmn:2
1	INT	1	row:15	colmn:3
14	RBRAK	]	row:15	colmn:4
8	COMMA	,	row:15	colmn:5
2	IDEN	x	row:15	colmn:6
13	LBRAK	[	row:15	colmn:7
1	INT	5	row:15	colmn:8
14	RBRAK	]	row:15	colmn:9
8	COMMA	,	row:15	colmn:10
2	IDEN	y	row:15	colmn:11
8	COMMA	,	row:15	colmn:12
2	IDEN	z	row:15	colmn:13
8	COMMA	,	row:15	colmn:14
2	IDEN	__	row:15	colmn:15
9	SEMI	;	row:15	colmn:16
35	PRINTFUNC	printf	row:16	colmn:0
11	LPAR	(	row:16	colmn:1
4	STR	"variable defination passed!"	row:16	colmn:2
12	RPAR	)	row:16	colmn:3
9	SEMI	;	row:16	colmn:4
34	RETURNSY	return	row:17	colmn:0
9	SEMI	;	row:17	colmn:1
7	RCURB	}	row:18	colmn:0
27	NOTYP	void	row:20	colmn:0
2	IDEN	constf5	row:20	colmn:1
11	LPAR	(	row:20	colmn:2
12	RPAR	)	row:20	colmn:3
6	LCURB	{	row:20	colmn:4
28	CONSTYP	const	row:21	colmn:0
25	INTYP	int	row:21	colmn:1
2	IDEN	a	row:21	colmn:2
5	ASSIGN	=	row:21	colmn:3
1	INT	10	row:21	colmn:4
8	COMMA	,	row:21	colmn:5
2	IDEN	b	row:21	colmn:6
5	ASSIGN	=	row:21	colmn:7
1	INT	2	row:21	colmn:8
8	COMMA	,	row:21	colmn:9
2	IDEN	c	row:21	colmn:10
5	ASSIGN	=	row:21	colmn:11
1	INT	3	row:21	colmn:12
9	SEMI	;	row:21	colmn:13
28	CONSTYP	const	row:22	colmn:0
26	CHARTYP	char	row:22	colmn:1
2	IDEN	d	row:22	colmn:2
5	ASSIGN	=	row:22	colmn:3
3	CHR	'd'	row:22	colmn:4
8	COMMA	,	row:22	colmn:5
2	IDEN	e	row:22	colmn:6
5	ASSIGN	=	row:22	colmn:7
3	CHR	'e'	row:22	colmn:8
8	COMMA	,	row:22	colmn:9
2	IDEN	f	row:22	colmn:10
5	ASSIGN	=	row:22	colmn:11
3	CHR	'f'	row:22	colmn:12
8	COMMA	,	row:22	colmn:13
2	IDEN	g	row:22	colmn:14
5	ASSIGN	=	row:22	colmn:15
3	CHR	'+'	row:22	colmn:16
8	COMMA	,	row:22	colmn:17
2	IDEN	h	row:22	colmn:18
5	ASSIGN	=	row:22	colmn:19
3	CHR	'-'	row:22	colmn:20
9	SEMI	;	row:22	colmn:21
28	CONSTYP	const	row:23	colmn:0
26	CHARTYP	char	row:23	colmn:1
2	IDEN	i	row:23	colmn:2
5	ASSIGN	=	row:23	colmn:3
3	CHR	'8'	row:23	colmn:4
9	SEMI	;	row:23	colmn:5
35	PRINTFUNC	printf	row:25	colmn:0
11	LPAR	(	row:25	colmn:1
4	STR	"const defination passed!"	row:25	colmn:2
12	RPAR	)	row:25	colmn:3
9	SEMI	;	row:25	colmn:4
7	RCURB	}	row:26	colmn:0
27	NOTYP	void	row:28	colmn:0
2	IDEN	defi	row:28	colmn:1
11	LPAR	(	row:28	colmn:2
25	INTYP	int	row:28	colmn:3
2	IDEN	value	row:28	colmn:4
12	RPAR	)	row:28	colmn:5
6	LCURB	{	row:28	colmn:6
28	CONSTYP	const	row:29	colmn:0
25	INTYP	int	row:29	colmn:1
2	IDEN	a1	row:29	colmn:2
5	ASSIGN	=	row:29	colmn:3
1	INT	10	row:29	colmn:4
8	COMMA	,	row:29	colmn:5
2	IDEN	b1	row:29	colmn:6
5	ASSIGN	=	row:29	colmn:7
1	INT	2	row:29	colmn:8
8	COMMA	,	row:29	colmn:9
2	IDEN	c1	row:29	colmn:10
5	ASSIGN	=	row:29	colmn:11
1	INT	3	row:29	colmn:12
9	SEMI	;	row:29	colmn:13
28	CONSTYP	const	row:30	colmn:0
26	CHARTYP	char	row:30	colmn:1
2	IDEN	d1	row:30	colmn:2
5	ASSIGN	=	row:30	colmn:3
3	CHR	'd'	row:30	colmn:4
8	COMMA	,	row:30	colmn:5
2	IDEN	e1	row:30	colmn:6
5	ASSIGN	=	row:30	colmn:7
3	CHR	'e'	row:30	colmn:8
8	COMMA	,	row:30	colmn:9
2	IDEN	f1	row:30	colmn:10
5	ASSIGN	=	row:30	colmn:11
3	CHR	'f'	row:30	colmn:12
8	COMMA	,	row:30	colmn:13
2	IDEN	g1	row:30	colmn:14
5	ASSIGN	=	row:30	colmn:15
3	CHR	'+'	row:30	colmn:16
8	COMMA	,	row:30	colmn:17
2	IDEN	h1	row:30	colmn:18
5	ASSIGN	=	row:30	colmn:19
3	CHR	'-'	row:30	colmn:20
9	SEMI	;	row:30	colmn:21
28	CONSTYP	const	row:31	colmn:0
26	CHARTYP	char	row:31	colmn:1
2	IDEN	i1	row:31	colmn:2
5	ASSIGN	=	row:31	colmn:3
3	CHR	'8'	row:31	colmn:4
9	SEMI	;	row:31	colmn:5
25	INTYP	int	row:33	colmn:0
2	IDEN	a	row:33	colmn:1
8	COMMA	,	row:33	colmn:2
2	IDEN	b	row:33	colmn:3
8	COMMA	,	row:33	colmn:4
2	IDEN	c	row:33	colmn:5
8	COMMA	,	row:33	colmn:6
2	IDEN	d	row:33	colmn:7
13	LBRAK	[	row:33	colmn:8
1	INT	10	row:33	colmn:9
14	RBRAK	]	row:33	colmn:10
8	COMMA	,	row:33	colmn:11
2	IDEN	e	row:33	colmn:12
13	LBRAK	[	row:33	colmn:13
1	INT	4	row:33	colmn:14
14	RBRAK	]	row:33	colmn:15
8	COMMA	,	row:33	colmn:16
2	IDEN	f	row:33	colmn:17
8	COMMA	,	row:33	colmn:18
2	IDEN	g	row:33	colmn:19
13	LBRAK	[	row:33	colmn:20
1	INT	5	row:33	colmn:21
14	RBRAK	]	row:33	colmn:22
8	COMMA	,	row:33	colmn:23
2	IDEN	k	row:33	colmn:24
8	COMMA	,	row:33	colmn:25
2	IDEN	l	row:33	colmn:26
13	LBRAK	[	row:33	colmn:27
1	INT	6	row:33	colmn:28
14	RBRAK	]	row:33	colmn:29
9	SEMI	;	row:33	colmn:30
25	INTYP	int	row:34	colmn:0
2	IDEN	m	row:34	colmn:1
13	LBRAK	[	row:34	colmn:2
1	INT	7	row:34	colmn:3
14	RBRAK	]	row:34	colmn:4
8	COMMA	,	row:34	colmn:5
2	IDEN	n	row:34	colmn:6
13	LBRAK	[	row:34	colmn:7
1	INT	8	row:34	colmn:8
14	RBRAK	]	row:34	colmn:9
8	COMMA	,	row:34	colmn:10
2	IDEN	p	row:34	colmn:11
8	COMMA	,	row:34	colmn:12
2	IDEN	q	row:34	colmn:13
8	COMMA	,	row:34	colmn:14
2	IDEN	h	row:34	colmn:15
13	LBRAK	[	row:34	colmn:16
1	INT	9	row:34	colmn:17
14	RBRAK	]	row:34	colmn:18
9	SEMI	;	row:34	colmn:19
26	CHARTYP	char	row:35	colmn:0
2	IDEN	i	row:35	colmn:1
8	COMMA	,	row:35	colmn:2
2	IDEN	o	row:35	colmn:3
13	LBRAK	[	row:35	colmn:4
1	INT	4	row:35	colmn:5
14	RBRAK	]	row:35	colmn:6
8	COMMA	,	row:35	colmn:7
2	IDEN	r	row:35	colmn:8
13	LBRAK	[	row:35	colmn:9
1	INT	5	row:35	colmn:10
14	RBRAK	]	row:35	colmn:11
8	COMMA	,	row:35	colmn:12
2	IDEN	s	row:35	colmn:13
8	COMMA	,	row:35	colmn:14
2	IDEN	t	row:35	colmn:15
8	COMMA	,	row:35	colmn:16
2	IDEN	u	row:35	colmn:17
13	LBRAK	[	row:35	colmn:18
1	INT	65	row:35	colmn:19
14	RBRAK	]	row:35	colmn:20
8	COMMA	,	row:35	colmn:21
2	IDEN	v___	row:35	colmn:22
9	SEMI	;	row:35	colmn:23
26	CHARTYP	char	row:36	colmn:0
2	IDEN	w	row:36	colmn:1
13	LBRAK	[	row:36	colmn:2
1	INT	1	row:36	colmn:3
14	RBRAK	]	row:36	colmn:4
8	COMMA	,	row:36	colmn:5
2	IDEN	x	row:36	colmn:6
13	LBRAK	[	row:36	colmn:7
1	INT	5	row:36	colmn:8
14	RBRAK	]	row:36	colmn:9
8	COMMA	,	row:36	colmn:10
2	IDEN	y	row:36	colmn:11
8	COMMA	,	row:36	colmn:12
2	IDEN	z	row:36	colmn:13
8	COMMA	,	row:36	colmn:14
2	IDEN	__	row:36	colmn:15
9	SEMI	;	row:36	colmn:16
2	IDEN	a	row:38	colmn:0
5	ASSIGN	=	row:38	colmn:1
2	IDEN	value	row:38	colmn:2
9	SEMI	;	row:38	colmn:3
2	IDEN	d	row:39	colmn:0
13	LBRAK	[	row:39	colmn:1
1	INT	5	row:39	colmn:2
14	RBRAK	]	row:39	colmn:3
5	ASSIGN	=	row:39	colmn:4
2	IDEN	value	row:39	colmn:5
9	SEMI	;	row:39	colmn:6
2	IDEN	a	row:40	colmn:0
5	ASSIGN	=	row:40	colmn:1
2	IDEN	d1	row:40	colmn:2
9	SEMI	;	row:40	colmn:3
2	IDEN	__	row:41	colmn:0
5	ASSIGN	=	row:41	colmn:1
2	IDEN	e1	row:41	colmn:2
9	SEMI	;	row:41	colmn:3
2	IDEN	v___	row:42	colmn:0
5	ASSIGN	=	row:42	colmn:1
2	IDEN	g1	row:42	colmn:2
9	SEMI	;	row:42	colmn:3
35	PRINTFUNC	printf	row:44	colmn:0
11	LPAR	(	row:44	colmn:1
4	STR	"variable and const defination passed!"	row:44	colmn:2
12	RPAR	)	row:44	colmn:3
9	SEMI	;	row:44	colmn:4
7	RCURB	}	row:45	colmn:0
27	NOTYP	void	row:47	colmn:0
2	IDEN	defi_test	row:47	colmn:1
11	LPAR	(	row:47	colmn:2
12	RPAR	)	row:47	colmn:3
6	LCURB	{	row:47	colmn:4
2	IDEN	f5	row:48	colmn:0
11	LPAR	(	row:48	colmn:1
12	RPAR	)	row:48	colmn:2
9	SEMI	;	row:48	colmn:3
2	IDEN	constf5	row:49	colmn:0
11	LPAR	(	row:49	colmn:1
12	RPAR	)	row:49	colmn:2
9	SEMI	;	row:49	colmn:3
2	IDEN	defi	row:50	colmn:0
11	LPAR	(	row:50	colmn:1
1	INT	66	row:50	colmn:2
12	RPAR	)	row:50	colmn:3
9	SEMI	;	row:50	colmn:4
7	RCURB	}	row:51	colmn:0
27	NOTYP	void	row:54	colmn:0
2	IDEN	f1	row:54	colmn:1
11	LPAR	(	row:54	colmn:2
12	RPAR	)	row:54	colmn:3
6	LCURB	{	row:54	colmn:4
7	RCURB	}	row:54	colmn:5
25	INTYP	int	row:56	colmn:0
2	IDEN	f2	row:56	colmn:1
11	LPAR	(	row:56	colmn:2
25	INTYP	int	row:56	colmn:3
2	IDEN	q	row:56	colmn:4
12	RPAR	)	row:56	colmn:5
6	LCURB	{	row:56	colmn:6
34	RETURNSY	return	row:57	colmn:0
11	LPAR	(	row:57	colmn:1
2	IDEN	q	row:57	colmn:2
12	RPAR	)	row:57	colmn:3
9	SEMI	;	row:57	colmn:4
7	RCURB	}	row:58	colmn:0
25	INTYP	int	row:60	colmn:0
2	IDEN	f3	row:60	colmn:1
11	LPAR	(	row:60	colmn:2
12	RPAR	)	row:60	colmn:3
6	LCURB	{	row:60	colmn:4
34	RETURNSY	return	row:61	colmn:0
11	LPAR	(	row:61	colmn:1
1	INT	1	row:61	colmn:2
15	PLUS	+	row:61	colmn:3
1	INT	9	row:61	colmn:4
12	RPAR	)	row:61	colmn:5
9	SEMI	;	row:61	colmn:6
7	RCURB	}	row:62	colmn:0
25	INTYP	int	row:64	colmn:0
2	IDEN	max	row:64	colmn:1
11	LPAR	(	row:64	colmn:2
25	INTYP	int	row:64	colmn:3
2	IDEN	a	row:64	colmn:4
8	COMMA	,	row:64	colmn:5
25	INTYP	int	row:64	colmn:6
2	IDEN	b	row:64	colmn:7
12	RPAR	)	row:64	colmn:8
6	LCURB	{	row:64	colmn:9
29	IFSY	if	row:65	colmn:0
11	LPAR	(	row:65	colmn:1
2	IDEN	a	row:65	colmn:2
19	GT	>	row:65	colmn:3
2	IDEN	b	row:65	colmn:4
12	RPAR	)	row:65	colmn:5
34	RETURNSY	return	row:66	colmn:0
11	LPAR	(	row:66	colmn:1
2	IDEN	a	row:66	colmn:2
12	RPAR	)	row:66	colmn:3
9	SEMI	;	row:66	colmn:4
29	IFSY	if	row:67	colmn:0
11	LPAR	(	row:67	colmn:1
2	IDEN	b	row:67	colmn:2
19	GT	>	row:67	colmn:3
2	IDEN	a	r