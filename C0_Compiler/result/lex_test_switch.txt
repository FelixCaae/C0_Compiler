27	NOTYP	void	row:0	colmn:3
2	IDEN	calculate	row:0	colmn:4
11	LPAR	(	row:0	colmn:5
12	RPAR	)	row:0	colmn:6
6	LCURB	{	row:1	colmn:0
25	INTYP	int	row:2	colmn:0
2	IDEN	a	row:2	colmn:1
8	COMMA	,	row:2	colmn:2
2	IDEN	b	row:2	colmn:3
9	SEMI	;	row:2	colmn:4
26	CHARTYP	char	row:3	colmn:0
2	IDEN	op	row:3	colmn:1
9	SEMI	;	row:3	colmn:2
25	INTYP	int	row:4	colmn:0
2	IDEN	i	row:4	colmn:1
9	SEMI	;	row:4	colmn:2
2	IDEN	i	row:5	colmn:0
5	ASSIGN	=	row:5	colmn:1
1	INT	0	row:5	colmn:2
9	SEMI	;	row:5	colmn:3
36	SCANFUNC	scanf	row:6	colmn:0
11	LPAR	(	row:6	colmn:1
2	IDEN	a	row:6	colmn:2
8	COMMA	,	row:6	colmn:3
2	IDEN	b	row:6	colmn:4
8	COMMA	,	row:6	colmn:5
2	IDEN	op	row:6	colmn:6
12	RPAR	)	row:6	colmn:7
9	SEMI	;	row:6	colmn:8
32	SWITCHSY	switch	row:7	colmn:0
11	LPAR	(	row:7	colmn:1
2	IDEN	op	row:7	colmn:2
12	RPAR	)	row:7	colmn:3
6	LCURB	{	row:7	colmn:4
33	CASESY	case	row:8	colmn:0
3	CHR	'+'	row:8	colmn:1
10	COLON	:	row:8	colmn:2
35	PRINTFUNC	printf	row:9	colmn:0
11	LPAR	(	row:9	colmn:1
2	IDEN	a	row:9	colmn:2
15	PLUS	+	row:9	colmn:3
2	IDEN	b	row:9	colmn:4
12	RPAR	)	row:9	colmn:5
9	SEMI	;	row:9	colmn:6
33	CASESY	case	row:10	colmn:0
3	CHR	'-'	row:10	colmn:1
10	COLON	:	row:10	colmn:2
35	PRINTFUNC	printf	row:11	colmn:0
11	LPAR	(	row:11	colmn:1
2	IDEN	a	row:11	colmn:2
16	MINUS	-	row:11	colmn:3
2	IDEN	b	row:11	colmn:4
12	RPAR	)	row:11	colmn:5
9	SEMI	;	row:11	colmn:6
33	CASESY	case	row:12	colmn:0
3	CHR	'*'	row:12	colmn:1
10	COLON	:	row:12	colmn:2
35	PRINTFUNC	printf	row:13	colmn:0
11	LPAR	(	row:13	colmn:1
2	IDEN	a	row:13	colmn:2
17	STAR	*	row:13	colmn:3
2	IDEN	b	row:13	colmn:4
12	RPAR	)	row:13	colmn:5
9	SEMI	;	row:13	colmn:6
33	CASESY	case	row:14	colmn:0
3	CHR	'/'	row:14	colmn:1
10	COLON	:	row:14	colmn:2
35	PRINTFUNC	printf	row:15	colmn:0
11	LPAR	(	row:15	colmn:1
2	IDEN	a	row:15	colmn:2
18	DIV	/	row:15	colmn:3
2	IDEN	b	row:15	colmn:4
12	RPAR	)	row:15	colmn:5
9	SEMI	;	row:15	colmn:6
33	CASESY	case	row:16	colmn:0
3	CHR	'e'	row:16	colmn:1
10	COLON	:	row:16	colmn:2
6	LCURB	{	row:16	colmn:3
30	DOSY	do	row:18	colmn:0
6	LCURB	{	row:18	colmn:1
2	IDEN	a	row:19	colmn:0
5	ASSIGN	=	row:19	colmn:1
2	IDEN	a	row:19	colmn:2
17	STAR	*	row:19	colmn:3
1	INT	10	row:19	colmn:4
9	SEMI	;	row:19	colmn:5
2	IDEN	b	row:20	colmn:0
5	ASSIGN	=	row:20	colmn:1
2	IDEN	b	row:20	colmn:2
16	MINUS	-	row:20	colmn:3
1	INT	1	row:20	colmn:4
9	SEMI	;	row:20	colmn:5
7	RCURB	}	row:21	colmn:0
31	WHILESY	while	row:21	colmn:1
11	LPAR	(	row:21	colmn:2
2	IDEN	b	row:21	colmn:3
24	NEQU	!=	row:21	colmn:4
1	INT	0	row:21	colmn:5
12	RPAR	)	row:21	colmn:6
7	RCURB	}	row:22	colmn:0
7	RCURB	}	row:23	colmn:0
7	RCURB	}	row:24	colmn:0
27	NOTYP	void	row:25	colmn:0
37	MAINFUNC	main	row:25	colmn:1
11	LPAR	(	row:25	colmn:2
12	RPAR	)	row:25	colmn:3
6	LCURB	{	row:26	colmn:0
2	IDEN	calculate	row:27	colmn:0
11	LPAR	(	row:27	colmn:1
12	RPAR	)	row:27	colmn:2
9	SEMI	;	row:27	colmn:3
7	RCURB	}	row:28	colmn:0
39	ENDOFINPUT	ÿ	row:28	colmn:1
39	ENDOFINPUT	ÿ	row:28	colmn:2
