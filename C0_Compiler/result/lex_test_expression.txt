27	NOTYP	void	row:1	colmn:0
2	IDEN	test_hw	row:1	colmn:1
11	LPAR	(	row:1	colmn:2
12	RPAR	)	row:1	colmn:3
6	LCURB	{	row:2	colmn:0
35	PRINTFUNC	printf	row:3	colmn:0
11	LPAR	(	row:3	colmn:1
4	STR	"HelloWorld!This is the first test program written with C0 grammar!\n"	row:3	colmn:2
12	RPAR	)	row:3	colmn:3
9	SEMI	;	row:3	colmn:4
7	RCURB	}	row:4	colmn:0
27	NOTYP	void	row:5	colmn:0
2	IDEN	test_sp	row:5	colmn:1
11	LPAR	(	row:5	colmn:2
12	RPAR	)	row:5	colmn:3
6	LCURB	{	row:6	colmn:0
25	INTYP	int	row:7	colmn:0
2	IDEN	chi	row:7	colmn:1
9	SEMI	;	row:7	colmn:2
26	CHARTYP	char	row:8	colmn:0
2	IDEN	ch	row:8	colmn:1
9	SEMI	;	row:8	colmn:2
2	IDEN	chi	row:9	colmn:0
5	ASSIGN	=	row:9	colmn:1
1	INT	52	row:9	colmn:2
9	SEMI	;	row:9	colmn:3
2	IDEN	ch	row:10	colmn:0
5	ASSIGN	=	row:10	colmn:1
2	IDEN	chi	row:10	colmn:2
9	SEMI	;	row:10	colmn:3
35	PRINTFUNC	printf	row:11	colmn:0
11	LPAR	(	row:11	colmn:1
2	IDEN	ch	row:11	colmn:2
12	RPAR	)	row:11	colmn:3
9	SEMI	;	row:11	colmn:4
2	IDEN	chi	row:12	colmn:0
5	ASSIGN	=	row:12	colmn:1
1	INT	54	row:12	colmn:2
9	SEMI	;	row:12	colmn:3
2	IDEN	ch	row:13	colmn:0
5	ASSIGN	=	row:13	colmn:1
2	IDEN	chi	row:13	colmn:2
9	SEMI	;	row:13	colmn:3
35	PRINTFUNC	printf	row:14	colmn:0
11	LPAR	(	row:14	colmn:1
2	IDEN	ch	row:14	colmn:2
12	RPAR	)	row:14	colmn:3
9	SEMI	;	row:14	colmn:4
30	DOSY	do	row:16	colmn:0
6	LCURB	{	row:16	colmn:1
2	IDEN	chi	row:17	colmn:0
5	ASSIGN	=	row:17	colmn:1
2	IDEN	chi	row:17	colmn:2
15	PLUS	+	row:17	colmn:3
1	INT	1	row:17	colmn:4
9	SEMI	;	row:17	colmn:5
2	IDEN	ch	row:18	colmn:0
5	ASSIGN	=	row:18	colmn:1
2	IDEN	chi	row:18	colmn:2
9	SEMI	;	row:18	colmn:3
35	PRINTFUNC	printf	row:19	colmn:0
11	LPAR	(	row:19	colmn:1
2	IDEN	chi	row:19	colmn:2
12	RPAR	)	row:19	colmn:3
9	SEMI	;	row:19	colmn:4
7	RCURB	}	row:20	colmn:0
31	WHILESY	while	row:20	colmn:1
11	LPAR	(	row:20	colmn:2
2	IDEN	chi	row:20	colmn:3
24	NEQU	!=	row:20	colmn:4
1	INT	128	row:20	colmn:5
12	RPAR	)	row:20	colmn:6
9	SEMI	;	row:20	colmn:7
7	RCURB	}	row:21	colmn:0
25	INTYP	int	row:22	colmn:0
2	IDEN	get10	row:22	colmn:1
11	LPAR	(	row:22	colmn:2
12	RPAR	)	row:22	colmn:3
6	LCURB	{	row:23	colmn:0
34	RETURNSY	return	row:24	colmn:0
11	LPAR	(	row:24	colmn:1
1	INT	10	row:24	colmn:2
12	RPAR	)	row:24	colmn:3
9	SEMI	;	row:24	colmn:4
7	RCURB	}	row:25	colmn:0
27	NOTYP	void	row:26	colmn:0
2	IDEN	test_condition	row:26	colmn:1
11	LPAR	(	row:26	colmn:2
12	RPAR	)	row:26	colmn:3
6	LCURB	{	row:27	colmn:0
28	CONSTYP	const	row:28	colmn:0
26	CHARTYP	char	row:28	colmn:1
2	IDEN	ch	row:28	colmn:2
5	ASSIGN	=	row:28	colmn:3
3	CHR	'a'	row:28	colmn:4
9	SEMI	;	row:28	colmn:5
28	CONSTYP	const	row:29	colmn:0
25	INTYP	int	row:29	colmn:1
2	IDEN	a	row:29	colmn:2
5	ASSIGN	=	row:29	colmn:3
1	INT	1	row:29	colmn:4
8	COMMA	,	row:29	colmn:5
2	IDEN	b	row:29	colmn:6
5	ASSIGN	=	row:29	colmn:7
1	INT	1	row:29	colmn:8
9	SEMI	;	row:29	colmn:9
29	IFSY	if	row:30	colmn:0
11	LPAR	(	row:30	colmn:1
2	IDEN	a	row:30	colmn:2
23	EQU	==	row:30	colmn:3
1	INT	1	row:30	colmn:4
12	RPAR	)	row:30	colmn:5
6	LCURB	{	row:31	colmn:0
35	PRINTFUNC	printf	row:32	colmn:0
11	LPAR	(	row:32	colmn:1
4	STR	"a==1"	row:32	colmn:2
12	RPAR	)	row:32	colmn:3
9	SEMI	;	row:32	colmn:4
7	RCURB	}	row:33	colmn:0
29	IFSY	if	row:34	colmn:0
11	LPAR	(	row:34	colmn:1
2	IDEN	a	row:34	colmn:2
12	RPAR	)	row:34	colmn:3
6	LCURB	{	row:35	colmn:0
35	PRINTFUNC	printf	row:36	colmn:0
11	LPAR	(	row:36	colmn:1
4	STR	"a!=0"	row:36	colmn:2
12	RPAR	)	row:36	colmn:3
9	SEMI	;	row:36	colmn:4
7	RCURB	}	row:37	colmn:0
29	IFSY	if	row:38	colmn:0
11	LPAR	(	row:38	colmn:1
2	IDEN	a	row:38	colmn:2
15	PLUS	+	row:38	colmn:3
2	IDEN	b	row:38	colmn:4
19	GT	>	row:38	colmn:5
2	IDEN	a	row:38	colmn:6
16	MINUS	-	row:38	colmn:7
2	IDEN	b	row:38	colmn:8
12	RPAR	)	row:38	colmn:9
6	LCURB	{	row:39	colmn:0
35	PRINTFUNC	printf	row:40	colmn:0
11	LPAR	(	row:40	colmn:1
4	STR	"a+b>a-b"	row:40	colmn:2
12	RPAR	)	row:40	colmn:3
9	SEMI	;	row:40	colmn:4
7	RCURB	}	row:41	colmn:0
29	IFSY	if	row:42	colmn:0
11	LPAR	(	row:42	colmn:1
3	CHR	'a'	row:42	colmn:2
19	GT	>	row:42	colmn:3
1	INT	1	row:42	colmn:4
12	RPAR	)	row:42	colmn:5
6	LCURB	{	row:43	colmn:0
35	PRINTFUNC	printf	row:44	colmn:0
11	LPAR	(	row:44	colmn:1
4	STR	"'a' > 1"	row:44	colmn:2
12	RPAR	)	row:44	colmn:3
9	SEMI	;	row:44	colmn:4
7	RCURB	}	row:45	colmn:0
7	RCURB	}	row:46	colmn:0
27	NOTYP	void	row:47	colmn:0
2	IDEN	test_expression	row:47	colmn:1
11	LPAR	(	row:47	colmn:2
12	RPAR	)	row:47	colmn:3
6	LCURB	{	row:48	colmn:0
25	INTYP	int	row:49	colmn:0
2	IDEN	ia	row:49	colmn:1
13	LBRAK	[	row:49	colmn:2
1	INT	2	row:49	colmn:3
14	RBRAK	]	row:49	colmn:4
9	SEMI	;	row:49	colmn:5
26	CHARTYP	char	row:50	colmn:0
2	IDEN	ca	row:50	colmn:1
13	LBRAK	[	row:50	colmn:2
1	INT	1	row:50	colmn:3
14	RBRAK	]	row:50	colmn:4
9	SEMI	;	row:50	colmn:5
25	INTYP	int	row:51	colmn:0
2	IDEN	a1	row:51	colmn:1
8	COMMA	,	row:51	colmn:2
2	IDEN	a2	row:51	colmn:3
8	COMMA	,	row:51	colmn:4
2	IDEN	a3	row:51	colmn:5
8	COMMA	,	row:51	colmn:6
2	IDEN	a4	row:51	colmn:7
8	COMMA	,	row:51	colmn:8
2	IDEN	a5	row:51	colmn:9
9	SEMI	;	row:51	colmn:10
26	CHARTYP	char	row:52	colmn:0
2	IDEN	c1	row:52	colmn:1
8	COMMA	,	row:52	colmn:2
2	IDEN	c2	row:52	colmn:3
8	COMMA	,	row:52	colmn:4
2	IDEN	c3	row:52	colmn:5
8	COMMA	,	row:52	colmn:6
2	IDEN	c4	row:52	colmn:7
8	COMMA	,	row:52	colmn:8
2	IDEN	c5	row:52	colmn:9
9	SEMI	;	row:52	colmn:10
2	IDEN	a1	row:53	colmn:0
5	ASSIGN	=	row:53	colmn:1
1	INT	18	row:53	colmn:2
17	STAR	*	row:53	colmn:3
1	INT	32	row:53	colmn:4
16	MINUS	-	row:53	colmn:5
1	INT	17	row:53	colmn:6
17	STAR	*	row:53	colmn:7
11	LPAR	(	row:53	colmn:8
1	INT	55	row:53	colmn:9
18	DIV	/	row:53	colmn:10
1	INT	5	row:53	colmn:11
12	RPAR	)	row:53	colmn:12
16	MINUS	-	row:53	colmn:13
1	INT	388	row:53	colmn:14
9	SEMI	;	row:53	colmn:15
2	IDEN	a2	row:54	colmn:0
5	ASSIGN	=	row:54	colmn:1
15	PLUS	+	row:54	colmn:2
11	LPAR	(	row:54	colmn:3
15	PLUS	+	row:54	colmn:4
1	INT	1	row:54	colmn:5
12	RPAR	)	row:54	colmn:6
15	PLUS	+	row:54	colmn:7
11	LPAR	(	row:54	colmn:8
16	MINUS	-	row:54	colmn:9
15	PLUS	+	row:54	colmn:10
15	PLUS	+	row:54	colmn:11
